<?php

namespace App\Http\Controllers\PHP8\P333Prototype;

/**
 * Паттерн "Прототип" (Prototype) - это порождающий паттерн проектирования, который используется для создания новых
 * объектов на основе существующего объекта (прототипа). Он позволяет создавать объекты-клонированные копии других
 * объектов, сохраняя их состояние и структуру.
 *
 * В разработке ювелирного интернет-магазина на Laravel, паттерн "Прототип" может быть полезен в следующих логических
 * случаях:
 *
 * Клонирование продуктов и ювелирных изделий: Если ваш магазин предоставляет уникальные или кастомизированные
 * ювелирные изделия, вы можете использовать "Прототип" для создания копий этих изделий с разными параметрами.
 * Например, создать копии украшений с различными материалами, драгоценными камнями и размерами на основе исходного
 * прототипа.
 *
 * Клонирование заказов и корзин покупателей: "Прототип" может быть использован для создания копий заказов или корзин
 * покупателей. Это может быть полезно, если клиент хочет сохранить текущую корзину и создать новую на основе
 * предыдущей, сохраняя все выбранные товары и опции.
 *
 * Клонирование шаблонов документов: Если ваш магазин генерирует документы или сертификаты для клиентов, "Прототип"
 * может быть использован для создания копий шаблонов документов с разными данными.
 *
 * Управление пользовательскими настройками и профилями: Паттерн "Прототип" может быть применен для создания копий
 * пользовательских профилей с разными настройками и параметрами.
 *
 * Генерация кастомизированных представлений: "Прототип" может использоваться для создания копий представлений или
 * макетов с различными параметрами, что может быть полезно для кастомизации внешнего вида магазина.
 *
 * Клонирование коллекций товаров: Если ваш магазин предлагает коллекции товаров или каталоги, "Прототип" может помочь
 * в создании копий коллекций с разными наборами товаров.
 *
 * Паттерн "Прототип" упрощает создание копий объектов, облегчая процесс кастомизации и переиспользования существующих
 * объектов в вашем интернет-магазине. Это особенно полезно, если ваш магазин предлагает уникальные и кастомизированные
 * товары, а также для управления данными и параметрами клиентов.
 */
class ProgramP333Prototype
{
    public function index()
    {
        // Создание экземпляра фабрики ландшафта (TerrainFactory) с передачей прототипов разных типов ландшафта.
        $factory = new TerrainFactory(
            new EarthSea(-1), // Прототип морского ландшафта с указанием уровня (-1).
            new EarthPlains(),          // Прототип равнинного ландшафта.
            new EarthForest()           // Прототип лесного ландшафта.
        );

        // Вызов методов для получения объектов разных типов ландшафта.
        $sea = $factory->getSea();       // Получение объекта морского ландшафта.
        $plains = $factory->getPlains(); // Получение объекта равнинного ландшафта.
        $forest = $factory->getForest(); // Получение объекта лесного ландшафта.

        // Использование функции dd() для вывода значений полученных объектов в удобном формате для отладки.
        dd($sea, $plains, $forest);
    }
}
