<?php

namespace App\Http\Controllers\PHP8\P244Abstract;

/**
 * Паттерн "Абстрактная фабрика" (Abstract Factory) - это порождающий паттерн проектирования, который предоставляет
 * интерфейс для создания семейств связанных или зависимых объектов без указания их конкретных классов. Этот паттерн
 * предоставляет абстрактный класс фабрики, который имеет методы для создания различных типов объектов, и конкретные
 * реализации этой фабрики для каждого семейства объектов.
 *
 * В разработке ювелирного интернет-магазина на Laravel, паттерн "Абстрактная фабрика" может быть полезен в следующих
 * логических случаях:
 *
 * Создание продуктов разных категорий: Если ваш магазин предлагает разные категории ювелирных изделий (например,
 * кольца, ожерелья, часы), и каждая категория имеет свои уникальные свойства, вы можете использовать "Абстрактную
 * фабрику" для создания набора фабрик, каждая из которых создает продукты определенной категории. Это позволит вам
 * создавать продукты разных категорий без необходимости знать их конкретные классы.
 *
 * Интеграция с разными поставщиками: Если ваш интернет-магазин сотрудничает с несколькими поставщиками, каждый из
 * которых предоставляет свои ювелирные изделия с уникальными характеристиками и атрибутами.
 * "Абстрактная фабрика" может быть использована для создания фабрик, каждая из которых связана с конкретным
 * поставщиком. Это упростит интеграцию с разными поставщиками и управление продуктами, предоставляемыми ими.
 *
 * Поддержка разных регионов: Если ваш магазин работает в разных регионах, где могут существовать различные стандарты и
 * требования к ювелирным изделиям, "Абстрактная фабрика" может помочь создавать продукты, соответствующие стандартам
 * конкретного региона.
 *
 * Работа с разными поставками и упаковкой: Если ваш магазин предоставляет разные варианты упаковки и методы доставки,
 * "Абстрактная фабрика" может использоваться для создания фабрик, каждая из которых создает объекты, связанные с
 * определенными методами упаковки и доставки.
 *
 * Множество внешних интеграций: Если ваш интернет-магазин интегрируется с разными сторонними системами, такими как
 * платежные шлюзы, системы учета заказов и другие, "Абстрактная фабрика" может создать абстракцию для создания
 * объектов, связанных с этими интеграциями.
 *
 * Используя "Абстрактную фабрику", вы можете легко создавать семейства объектов, которые соответствуют определенным
 * требованиям или контекстам без необходимости знания конкретных классов. Это способствует гибкости и упрощает
 * поддержку и расширение вашего интернет-магазина.
 */
class ProgramP244Abstract
{
    public function index()
    {
        // Создадим экземпляры классов для тестирования
        $textHandler = ParamHandler::getInstance(base_path("App/Http/Controllers/PHP8/P342DependencyInjection/sample.txt"));
        $xmlHandler = ParamHandler::getInstance(base_path("App/Http/Controllers/PHP8/P342DependencyInjection/data.xml"));

        // Добавим параметры
        $textHandler->addParam('param1', 'value1');
        $textHandler->addParam('param2', 'value2');
        $xmlHandler->addParam('param3', 'value3');
        $xmlHandler->addParam('param4', 'value4');

        // Запишем данные
        $textHandler->write();
        $xmlHandler->write();

        // Прочитаем данные
        $textHandler->read();
        $xmlHandler->read();

        // Получим параметры
        $textParams = $textHandler->getAUParams();
        $xmlParams = $xmlHandler->getAUParams();

        // Выведем результат
        echo "Text Params:\n";
        print_r($textParams);

        echo "XML Params:\n";
        print_r($xmlParams);
    }
}
