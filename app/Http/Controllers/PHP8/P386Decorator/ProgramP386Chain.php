<?php

namespace App\Http\Controllers\PHP8\P386Decorator;

/**
 * Паттерн "Цепочка обязанностей" (Chain of Responsibility) - это поведенческий шаблон проектирования, который
 * позволяет создать цепочку объектов, где каждый объект может обработать запрос или событие, передавая его следующему
 * объекту в цепочке. Этот паттерн позволяет избежать привязки отправителя запроса к конкретному получателю и дает
 * возможность обработать запрос несколькими объектами в зависимости от его характера.
 *
 * В контексте разработки ювелирного интернет-магазина на Laravel, паттерн "Цепочка обязанностей" может быть
 * использован в следующих логических случаях:
 *
 * Обработка заказов: В интернет-магазине заказы могут требовать различных этапов обработки, таких как проверка наличия
 * товара, расчет стоимости, создание инвойса и т. д. Каждый этап может быть представлен объектом в цепочке
 * обязанностей, и заказ будет последовательно проходить через каждый этап обработки.
 *
 * Авторизация и аутентификация: Паттерн "Цепочка обязанностей" может быть использован для создания цепочки фильтров
 * или проверок, которые выполняются при входе в систему пользователей. Например, можно добавить проверку на
 * двухфакторную аутентификацию, права доступа и другие проверки.
 *
 * Скидки и акции: Если ваш магазин предоставляет различные скидки и акции, цепочка обязанностей может использоваться
 * для проверки применимости скидки к заказу. Каждое звено цепочки может проверять, подходит ли скидка к заказу, и
 * применять ее, если условия выполнены.
 *
 * Поддержка разных платежных систем: При обработке платежей разных платежных систем, каждая система может быть
 * представлена объектом в цепочке. Запрос на обработку платежа будет передан от одной системы к другой, пока одна из
 * них не обработает запрос.
 *
 * Валидация данных: Паттерн "Цепочка обязанностей" может быть использован для валидации данных, введенных
 * пользователями, перед их сохранением в базу данных. Различные виды валидации, такие как проверка на наличие,
 * правильность формата, уникальность и др., могут быть представлены разными звеньями в цепочке.
 *
 * Laravel предоставляет удобные инструменты для реализации паттерна "Цепочка обязанностей", такие как middleware для
 * обработки HTTP-запросов и возможности создания собственных классов-фильтров. Это делает его отличным выбором для
 * применения этого шаблона при разработке интернет-магазина на Laravel.
 */
class ProgramP386Chain
{
    public function index()
    {
        // Создание массива с данными запроса
        $requestData = [
            'user' => 'example_user',
            'action' => 'some_action',
        ];

        // Создание цепочки обработчиков запросов
        $process =
            new AuthenticateRequest(
                new StructureRequest(
                    new LogRequest(
                        new MainProcess()
                    )
                )
            );

        // Вызов метода process у первого обработчика в цепочке
        $process->process(new RequestHelper($requestData));
    }
}

